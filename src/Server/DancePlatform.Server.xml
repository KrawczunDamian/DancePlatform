<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DancePlatform.Server</name>
    </assembly>
    <members>
        <member name="T:DancePlatform.Server.Controllers.BaseApiController`1">
            <summary>
            Abstract BaseApi Controller Class
            </summary>
        </member>
        <member name="M:DancePlatform.Server.Controllers.Communication.ChatsController.GetChatHistoryAsync(System.String)">
            <summary>
            Get user wise chat history
            </summary>
            <param name="contactId"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.Communication.ChatsController.GetChatUsersAsync">
            <summary>
            get available users
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.Communication.ChatsController.SaveMessageAsync(DancePlatform.Application.Models.Chat.ChatHistory{DancePlatform.Application.Interfaces.Chat.IChatUser})">
            <summary>
            Save Chat Message
            </summary>
            <param name="message"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.Identity.AccountController.UpdateProfile(DancePlatform.Application.Requests.Identity.UpdateProfileRequest)">
            <summary>
            Update Profile
            </summary>
            <param name="model"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.Identity.AccountController.ChangePassword(DancePlatform.Application.Requests.Identity.ChangePasswordRequest)">
            <summary>
            Change Password
            </summary>
            <param name="model"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.Identity.AccountController.GetProfilePictureAsync(System.String)">
            <summary>
            Get Profile picture by Id
            </summary>
            <param name="userId"></param>
            <returns>Status 200 OK </returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.Identity.AccountController.UpdateProfilePictureAsync(DancePlatform.Application.Requests.Identity.UpdateProfilePictureRequest)">
            <summary>
            Update Profile Picture
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.Identity.TokenController.Get(DancePlatform.Application.Requests.Identity.TokenRequest)">
            <summary>
            Get Token (Email, Password)
            </summary>
            <param name="model"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.Identity.TokenController.Refresh(DancePlatform.Application.Requests.Identity.RefreshTokenRequest)">
            <summary>
            Refresh Token
            </summary>
            <param name="model"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.Identity.UserController.GetAll">
            <summary>
            Get User Details
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.Identity.UserController.GetById(System.String)">
            <summary>
            Get User By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.Identity.UserController.GetRolesAsync(System.String)">
            <summary>
            Get User Roles By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.Identity.UserController.UpdateRolesAsync(DancePlatform.Application.Requests.Identity.UpdateUserRolesRequest)">
            <summary>
            Update Roles for User
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.Identity.UserController.RegisterAsync(DancePlatform.Application.Requests.Identity.RegisterRequest)">
            <summary>
            Register a User
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.Identity.UserController.ConfirmEmailAsync(System.String,System.String)">
            <summary>
            Confirm Email
            </summary>
            <param name="userId"></param>
            <param name="code"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.Identity.UserController.ToggleUserStatusAsync(DancePlatform.Application.Requests.Identity.ToggleUserStatusRequest)">
            <summary>
            Toggle User Status (Activate and Deactivate)
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.Identity.UserController.ForgotPasswordAsync(DancePlatform.Application.Requests.Identity.ForgotPasswordRequest)">
            <summary>
            Forgot Password
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.Identity.UserController.ResetPasswordAsync(DancePlatform.Application.Requests.Identity.ResetPasswordRequest)">
            <summary>
            Reset Password
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.Identity.UserController.Export(System.String)">
            <summary>
            Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.RoleClaimController.GetAll">
            <summary>
            Get All Role Claims(e.g. Product Create Permission)
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.RoleClaimController.GetAllByRoleId(System.String)">
            <summary>
            Get All Role Claims By Id
            </summary>
            <param name="roleId"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.RoleClaimController.Post(DancePlatform.Application.Requests.Identity.RoleClaimRequest)">
            <summary>
            Add a Role Claim
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK </returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.RoleClaimController.Delete(System.Int32)">
            <summary>
            Delete a Role Claim
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.RoleController.GetAll">
            <summary>
            Get All Roles (basic, admin etc.)
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.RoleController.Post(DancePlatform.Application.Requests.Identity.RoleRequest)">
            <summary>
            Add a Role
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.RoleController.Delete(System.String)">
            <summary>
            Delete a Role
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.RoleController.GetPermissionsByRoleId(System.String)">
            <summary>
            Get Permissions By Role Id
            </summary>
            <param name="roleId"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.RoleController.Update(DancePlatform.Application.Requests.Identity.PermissionRequest)">
            <summary>
            Edit a Role Claim
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.Utilities.AuditsController.GetUserTrailsAsync">
            <summary>
            Get Current User Audit Trails
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.Utilities.AuditsController.ExportExcel(System.String,System.Boolean,System.Boolean)">
            <summary>
            Search Audit Trails and Export to Excel
            </summary>
            <param name="searchString"></param>
            <param name="searchInOldValues"></param>
            <param name="searchInNewValues"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.Utilities.PreferencesController.ChangeLanguageAsync(System.String)">
            <summary>
            Change Language Preference
            </summary>
            <param name="languageCode"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.v1.Catalog.BrandsController.GetAll">
            <summary>
            Get All Brands
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.v1.Catalog.BrandsController.GetById(System.Int32)">
            <summary>
            Get a Brand By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.v1.Catalog.BrandsController.Post(DancePlatform.Application.Features.Brands.Commands.AddEdit.AddEditBrandCommand)">
            <summary>
            Create/Update a Brand
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.v1.Catalog.BrandsController.Delete(System.Int32)">
            <summary>
            Delete a Brand
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.v1.Catalog.BrandsController.Export(System.String)">
            <summary>
            Search Brands and Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns></returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.v1.Catalog.ProductsController.GetAll(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get All Products
            </summary>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="searchString"></param>
            <param name="orderBy"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.v1.Catalog.ProductsController.GetProductImageAsync(System.Int32)">
            <summary>
            Get a Product Image by Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.v1.Catalog.ProductsController.Post(DancePlatform.Application.Features.Products.Commands.AddEdit.AddEditProductCommand)">
            <summary>
            Add/Edit a Product
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.v1.Catalog.ProductsController.Delete(System.Int32)">
            <summary>
            Delete a Product
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK response</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.v1.Catalog.ProductsController.Export(System.String)">
            <summary>
            Search Products and Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.v1.DashboardController.GetDataAsync">
            <summary>
            Get Dashboard Data
            </summary>
            <returns>Status 200 OK </returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.v1.Organisations.TeamsController.GetAll">
            <summary>
            Get All Teams
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.v1.Organisations.TeamsController.GetById(System.Int32)">
            <summary>
            Get a Team By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.v1.Organisations.TeamsController.Post(DancePlatform.Application.Features.Teams.Commands.AddEdit.AddEditTeamCommand)">
            <summary>
            Create/Update a Team
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.v1.Organisations.TeamsController.Delete(System.Int32)">
            <summary>
            Delete a Team
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.v1.Organisations.TeamsController.Export(System.String)">
            <summary>
            Search Teams and Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns></returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.v1.Organisations.TeamsController.GetProfilePictureAsync(System.Int32)">
            <summary>
            Get Profile picture by Id
            </summary>
            <param name="teamId"></param>
            <returns>Status 200 OK </returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.v1.Organisations.TeamsController.UpdateProfilePicture(DancePlatform.Application.Features.Teams.Commands.UpdateProfilePicture.UpdateProfilePictureTeamCommand)">
            <summary>
            Update team's profile picture
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.v1.Organisations.TeamsController.AddTeamMember(DancePlatform.Application.Features.Teams.Commands.AddMember.AddTeamMemberCommand)">
            <summary>
            Add a member to team
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.v1.Organisations.TeamsController.GetTeamMembersAsync(System.Int32)">
            <summary>
            Get team's members
            </summary>
            <param name="teamId"></param>
            <returns>Status 200 OK </returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.v1.Organisations.TeamsController.RemoveMemberAsync(System.Int32,System.Int32)">
            <summary>
            Remove a member
            </summary>
            <param name="dancerId"></param>
            <param name="teamId"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.v1.Organisations.TeamsController.UploadTeamPicture(DancePlatform.Application.Features.Teams.Commands.UpdateProfilePicture.UploadPictureTeamCommand)">
            <summary>
            Upload picture to team's gallery
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.v1.Organisations.TeamsController.GetTeamGalleryAsync(System.Int32)">
            <summary>
            Get team's gallery
            </summary>
            <param name="teamId"></param>
            <returns>Status 200 OK </returns>
        </member>
        <member name="M:DancePlatform.Server.Controllers.v1.UserProfile.DancersController.GetAll">
            <summary>
            Get All Dancers
            </summary>
            <returns>Status 200 OK</returns>
        </member>
    </members>
</doc>
